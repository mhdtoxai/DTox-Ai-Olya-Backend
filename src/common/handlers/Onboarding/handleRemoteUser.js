const scheduleTask = require('../../services/cloudTasksService'); // Aseg√∫rate de tener esta funci√≥n de Cloud Tasks
const getUserInfo = require('../../services/getUserInfo');
const moment = require('moment-timezone');

const handleRemoteUser = async (senderId) => {
  try {
    // Obtener informaci√≥n del usuario (incluyendo zona horaria e idioma)
    const { timezone, idioma } = await getUserInfo(senderId);
    // Determinar la plantilla seg√∫n el idioma del usuario

    console.log(`üåç Zona horaria del usuario: ${timezone}`);

    // Definir los horarios en UTC (30 minutos despu√©s de la hora actual)
    const times = {
      programremoto: moment.utc().add(30, 'minutes'), // Enviar mensaje de √°nimo
      programardia1: moment.utc(), // Cambiar estado a 'handleDia1Call'
    };

    console.log(`üïí Hora programada (UTC) - Mensaje: ${times.programremoto.format('YYYY-MM-DD HH:mm:ss')}`);
    console.log(`üïí Hora programada (UTC) - Cambio de estado: ${times.programardia1.format('YYYY-MM-DD HH:mm:ss')}`);

    // Funci√≥n para programar una tarea en Cloud Tasks
    const scheduleMessage = async (message, scheduledTime, eventName) => {
      console.log(`üåç Equivalente en ${timezone}: ${scheduledTime.clone().tz(timezone).format('YYYY-MM-DD HH:mm:ss')}`);

      const timestamp = Date.now(); // Obtener timestamp actual
      message.taskName = `${message.senderId}_${eventName}_${timestamp}`;

      await scheduleTask(message, scheduledTime.toDate());
      console.log(`‚úÖ Tarea programada para: ${scheduledTime.format('YYYY-MM-DD HH:mm:ss')} UTC`);
    };

    // Programar el mensaje de √°nimo para el usuario
    await scheduleMessage({
      senderId,
      type: 'text',
      message: idioma === 'ingles'
        ? `Look, a user has sent you an encouraging message as you start your journey:\n\nHi, I know how hard it is to decide to quit vaping. I want to congratulate you on taking this important step toward a healthier life. It‚Äôs not an easy path, but I know you can do it too. Every day without vaping is a victory, and I want you to know that you‚Äôre not alone in this fight. Keep going, YOU‚ÄôRE DOING THE RIGHT THING, and Olya will be with you every step of the way. Congratulations on your bravery and determination." - Leslie F. Texas`
        : `Mira, un usuario te ha enviado un mensaje de √°nimo ahora que inicias tu viaje:\n\nHola, s√© lo dif√≠cil que es tomar la decisi√≥n de dejar de vapear.\n\nQuiero felicitarte por dar este paso tan importante hacia una vida m√°s saludable.\n\nNo es un camino f√°cil, pero s√© que t√∫ tambi√©n puedes lograrlo.\n\nCada d√≠a sin vapeo es una victoria, y quiero que sepas que no est√°s solo en esta lucha.\n\nSigue adelante, EST√ÅS HACIENDO LO CORRECTO, y Olya estar√° contigo en cada paso del camino.\n\n¬°Felicidades por tu valent√≠a y determinaci√≥n!". - Luc√≠a Ospina. Colombia`
    }, times.programremoto, 'mensajeremoto');

    await scheduleMessage({
      senderId,
      type: 'estado',
      estado: 'programardia1', // üî• Cambia al siguiente d√≠a
    }, times.programardia1, 'programardia1');

    console.log(`üìÖ Mensajes programados para el usuario ${senderId} para ejecutarse dentro de 30 minutos`);

  } catch (error) {
    console.error(`‚ùå Error al programar el mensaje de √°nimo para el usuario ${senderId}:`, error);
  }
};

module.exports = handleRemoteUser;
